{"abi":[{"type":"error","name":"R","inputs":[]},{"type":"error","name":"T","inputs":[]}],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220131c99d77a151488dd289c3c952f05efce22c012964b6c24976d09dc6b07027864736f6c63430008110033","sourceMap":"305:9096:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;305:9096:17;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220131c99d77a151488dd289c3c952f05efce22c012964b6c24976d09dc6b07027864736f6c63430008110033","sourceMap":"305:9096:17:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"R\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"T\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vendor/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/vendor/TickMath.sol\":{\"keccak256\":\"0xaee39a4b7568dc7607e7a2221cb91d38e58bb215d1398c6969a075c7497f2ab4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://febeb9d784a18b79e79e0de20e09e20e44a16ea291d040fd0eec292792690c19\",\"dweb:/ipfs/QmYRqKdrtvYk8epJbM7w3DwF8BFmizsD6Wb9i25Gx2LJz4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"R"},{"inputs":[],"type":"error","name":"T"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/vendor/TickMath.sol":"TickMath"},"evmVersion":"london","libraries":{}},"sources":{"contracts/vendor/TickMath.sol":{"keccak256":"0xaee39a4b7568dc7607e7a2221cb91d38e58bb215d1398c6969a075c7497f2ab4","urls":["bzz-raw://febeb9d784a18b79e79e0de20e09e20e44a16ea291d040fd0eec292792690c19","dweb:/ipfs/QmYRqKdrtvYk8epJbM7w3DwF8BFmizsD6Wb9i25Gx2LJz4"],"license":"GPL-2.0-or-later"}},"version":1},"id":17}